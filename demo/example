const fs = require('node:fs/promises');

//1 . WRITE API END POINT WHICH WILL BE CREATE TEXT FILE IN A PARTICULAR FOLDER
// CONTENT OF THE FILE SHOULD BE CURRENT TIME STAMP
// THE FILENAME SHOULD BE CURRNET DATE-TIME.txt
function createFiles() {
    const timestamp = Date.now();
    const dateTime = new Date(timestamp).toISOString().replace(/:/g, "-").replace(/\..+/, '');
    const fileContent = timestamp.toString();
    const filePath = `./files/${dateTime}.txt`;
    fs.writeFile(filePath, fileContent, 'utf8')
    .then(() => console.log(`File "${filePath}" created with content: ${fileContent}`))
    .catch((error) => console.error('ERROR:', error));
}
createFiles();


// 2  WRTIE THW API END POINT FOR RETRIVER ALL THE TEXT FILE IN THE PARTICULAR FOLDER

function readingAllFile() {
    fs.readFile("./files")
    .then((data) => console.log(data))
    .catch((error) => {
        console.log(error)
    })
}
readingAllFile()



// --------------------------------------------------------------------------------------------

const express = require('express');
const fs = require('fs');
const path = require('path');
const app = express();
const port = 3000;

// Directory to store the text files
const folderPath = path.join(__dirname, 'text_files');

// Ensure the directory exists
if (!fs.existsSync(folderPath)) {
  fs.mkdirSync(folderPath);
}

// Endpoint to create a text file with the current timestamp
app.post('/create-file', (req, res) => {
  const currentDate = new Date();
  const formattedDate = currentDate.toISOString().replace(/:/g, '-').replace(/\..+/, '');
  const fileName = `${formattedDate}.txt`;
  const filePath = path.join(folderPath, fileName);
  const timeStamp = currentDate.toString();

  fs.writeFile(filePath, timeStamp, (err) => {
    if (err) {
      return res.status(500).send('Failed to create file');
    }
    res.send(`File created: ${fileName}`);
  });
});

// Endpoint to retrieve all text files in the folder
app.get('/list-files', (req, res) => {
  fs.readdir(folderPath, (err, files) => {
    if (err) {
      return res.status(500).send('Failed to retrieve files');
    }
    res.send(files);
  });
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});


